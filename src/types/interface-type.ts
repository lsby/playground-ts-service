// 该文件由脚本自动生成, 请勿修改.
export type InterfaceType = [{ path: "/api/sqlite-admin/backup-database"; method: "post"; input: {}; errorOutput: { status: "fail"; data: "未登录" | "非管理员"; }; successOutput: { status: "success"; data: { success: boolean; backupPath: string; }; }; webSocketData: {}; },{ path: "/api/demo/base/add"; method: "post"; input: { a: number; b: number; }; errorOutput: { status: "fail"; data: never; }; successOutput: { status: "success"; data: { res: number; }; }; webSocketData: {}; },{ path: "/api/demo/base/sub"; method: "post"; input: { a: number; b: number; }; errorOutput: { status: "fail"; data: "未登录"; }; successOutput: { status: "success"; data: { res: number; }; }; webSocketData: {}; },{ path: "/api/demo/file/upload-file"; method: "post"; input: {}; errorOutput: { status: "fail"; data: "未登录"; }; successOutput: { status: "success"; data: {}; }; webSocketData: {}; },{ path: "/api/demo/ws/ws-test"; method: "post"; input: {}; errorOutput: { status: "fail"; data: never; }; successOutput: { status: "success"; data: {}; }; webSocketData: { data: string; }; },{ path: "/api/user/is-login"; method: "post"; input: {}; errorOutput: { status: "fail"; data: never; }; successOutput: { status: "success"; data: { isLogin: boolean; }; }; webSocketData: {}; },{ path: "/api/user/login"; method: "post"; input: { userName: string; } & { userPassword: string; }; errorOutput: { status: "fail"; data: "用户名不能包含空格" | "用户名不能为空" | "用户名过短" | "用户名过长" | "密码不能包含空格" | "密码不能为空" | "密码过短" | "密码过长" | "用户不存在或密码错误"; }; successOutput: { status: "success"; data: { token: string; }; }; webSocketData: {}; },{ path: "/api/user/register"; method: "post"; input: { userName: string; } & { userPassword: string; }; errorOutput: { status: "fail"; data: "用户名不能包含空格" | "用户名不能为空" | "用户名过短" | "用户名过长" | "密码不能包含空格" | "密码不能为空" | "密码过短" | "密码过长" | "用户名已存在"; }; successOutput: { status: "success"; data: {}; }; webSocketData: {}; },{ path: "/api/demo/file/get-file"; method: "get"; input: {}; errorOutput: { status: "fail"; data: never; }; successOutput: Buffer; webSocketData: {}; },{ path: "/api/demo/user-crud/delete"; method: "post"; input: { id: string; }; errorOutput: { status: "fail"; data: "未登录" | "非管理员"; }; successOutput: { status: "success"; data: {}; }; webSocketData: {}; },{ path: "/api/demo/user-crud/create"; method: "post"; input: { name: string; pwd: string; }; errorOutput: { status: "fail"; data: "未登录" | "非管理员"; }; successOutput: { status: "success"; data: {}; }; webSocketData: {}; },{ path: "/api/demo/user-crud/read"; method: "post"; input: { page: number; size: number; }; errorOutput: { status: "fail"; data: "未登录" | "非管理员"; }; successOutput: { status: "success"; data: { data: { id: string; name: string; }[]; total: number; }; }; webSocketData: {}; },{ path: "/api/demo/user-crud/update"; method: "post"; input: { userId: string; newName: string; }; errorOutput: { status: "fail"; data: "未登录" | "非管理员"; }; successOutput: { status: "success"; data: {}; }; webSocketData: {}; },{ path: "/api/demo/new-user"; method: "post"; input: { name: string; pwd: string; }; errorOutput: { status: "fail"; data: "就要失败"; }; successOutput: { status: "success"; data: {}; }; webSocketData: {}; },{ path: "/api/demo/electron/set-focus"; method: "post"; input: { value: boolean; }; errorOutput: { status: "fail"; data: never; }; successOutput: { status: "success"; data: {}; }; webSocketData: {}; },{ path: "/api/demo/electron/dialog"; method: "post"; input: {}; errorOutput: { status: "fail"; data: never; }; successOutput: { status: "success"; data: {}; }; webSocketData: {}; },{ path: "/api/sqlite-admin/execute-query"; method: "post"; input: { sql: string; parameters: (string | number | boolean | null)[]; }; errorOutput: { status: "fail"; data: string; }; successOutput: { status: "success"; data: { rows: Record<string, any>[]; numAffectedRows?: number | undefined; insertId?: number | undefined; }; }; webSocketData: {}; },{ path: "/api/sqlite-admin/get-database-info"; method: "post"; input: {}; errorOutput: { status: "fail"; data: "未登录" | "非管理员"; }; successOutput: { status: "success"; data: { version: string; }; }; webSocketData: {}; },{ path: "/api/sqlite-admin/get-indexes"; method: "post"; input: {}; errorOutput: { status: "fail"; data: "未登录" | "非管理员"; }; successOutput: { status: "success"; data: { indexes: { name: string; sql: string | null; table: string; }[]; }; }; webSocketData: {}; },{ path: "/api/sqlite-admin/get-table-schema"; method: "post"; input: { tableName: string; }; errorOutput: { status: "fail"; data: "未登录" | "非管理员"; }; successOutput: { status: "success"; data: { columns: { type: string; name: string; notnull: number; pk: number; dflt_value: string | null; }[]; }; }; webSocketData: {}; },{ path: "/api/sqlite-admin/get-tables"; method: "post"; input: {}; errorOutput: { status: "fail"; data: "未登录" | "非管理员"; }; successOutput: { status: "success"; data: { tables: string[]; }; }; webSocketData: {}; },{ path: "/api/sqlite-admin/get-triggers"; method: "post"; input: {}; errorOutput: { status: "fail"; data: "未登录" | "非管理员"; }; successOutput: { status: "success"; data: { triggers: { name: string; sql: string; table: string; }[]; }; }; webSocketData: {}; },{ path: "/api/task-admin/cancel"; method: "post"; input: { 任务id: string; }; errorOutput: { status: "fail"; data: "未登录" | "非管理员"; }; successOutput: { status: "success"; data: { 成功: boolean; }; }; webSocketData: {}; },{ path: "/api/task-admin/create-fail-test"; method: "post"; input: { 失败任务名称: string; 最大重试次数: number; 失败消息: string; 任务优先级?: number | undefined; 任务超时时间?: number | undefined; 失败延迟时间?: number | undefined; }; errorOutput: { status: "fail"; data: "未登录" | "非管理员"; }; successOutput: { status: "success"; data: { 任务id: string; }; }; webSocketData: {}; },{ path: "/api/task-admin/create-test"; method: "post"; input: { 测试任务名称: string; 测试任务消息: string; 测试任务持续时间: number; 任务优先级?: number | undefined; 任务超时时间?: number | undefined; 最大重试次数?: number | undefined; }; errorOutput: { status: "fail"; data: "未登录" | "非管理员"; }; successOutput: { status: "success"; data: { 任务id: string; }; }; webSocketData: {}; },{ path: "/api/task-admin/get-log"; method: "post"; input: { 任务id: string; }; errorOutput: { status: "fail"; data: "未登录" | "非管理员"; }; successOutput: { status: "success"; data: { 日志列表: { 时间: Date; 消息: string; }[]; }; }; webSocketData: { 新日志: { 时间: Date; 消息: string; }; }; },{ path: "/api/task-admin/list"; method: "post"; input: {}; errorOutput: { status: "fail"; data: "未登录" | "非管理员"; }; successOutput: { status: "success"; data: { 任务列表: { id: string; 日志列表: { 时间: Date; 消息: string; }[]; 名称: string; 状态: string; 优先级: number; 创建时间: Date; 开始时间: Date | null; 结束时间: Date | null; 执行时长: number | null; 重试次数: number; 错误信息: string | null; 输出结果?: any; }[]; }; }; webSocketData: {}; }]